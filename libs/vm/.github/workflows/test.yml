name: Compiler Tests

on: pull_request

jobs:
    build:
        name: Test compiler
        runs-on: ubuntu-24.04
        strategy:
          matrix:
            CMAKE_BUILD_TYPE: [RelWithDebInfo, Debug]
            compiler: [{CXX: g++-13, CC: gcc-13}, {CXX: clang++-18, CC: clang-18}]

        steps:
            - uses: actions/checkout@v4
              with:
                submodules: true
                path: compiler
            
            - name: Check out EVMC
              uses: actions/checkout@v4
              with:
                repository: ethereum/evmc
                path: evmc
 
            - name: Install dependencies
              run: |
                sudo apt install -y     \
                    build-essential     \
                    cmake               \
                    llvm-18-dev         \
                    libcli11-dev        \
                    libgtest-dev

            - name: Build compiler
              working-directory: compiler
              run: |
                cmake -S . -B build                                 \
                  -DCMAKE_BUILD_TYPE=${{ matrix.CMAKE_BUILD_TYPE }} \
                  -DCMAKE_C_COMPILER=${{ matrix.compiler.CC }}      \
                  -DCMAKE_CXX_COMPILER=${{ matrix.compiler.CXX }}   \
                  -DLLVM_DIR=$(llvm-config-18 --cmakedir)
                cmake --build build

            - name: Build EVMC tools
              working-directory: evmc
              run: |
                cmake -S . -B build \
                  -DEVMC_TESTING=On
                cmake --build build

            - name: Run compatibility tests
              run: |
                evmc/build/bin/evmc-vmtester compiler/build/src/vm/libmonad-compiler-vm.so

            - name: Run tests
              run: |
                ctest --test-dir build

    code-quality:
        name: Code quality checks
        runs-on: ubuntu-24.04
        steps:
            - uses: actions/checkout@v4
              with:
                submodules: true

            - name: Formatting Check
              uses: jidicula/clang-format-action@v4.13.0
              with:
                exclude-regex: '(build|third_party)'
                clang-format-version: 18

            - name: Install dependencies
              run: |
                sudo apt install -y     \
                    build-essential     \
                    cmake               \
                    llvm-18-dev         \
                    libcli11-dev        \
                    libgtest-dev

            - name: Set up build system
              run: |
                cmake -S . -B build

            - name: Run clang-tidy checks
              run: |
                ./scripts/apply-clang-tidy-fixes.sh build run-clang-tidy-18
                if [[ ! -z "$(git status --untracked-files=no --porcelain)" ]]; then
                  echo "Fixes applied; please re-run locally and commit!"
                  exit 1
                fi