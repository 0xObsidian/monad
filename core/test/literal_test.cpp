#include <gtest/gtest.h>

#include <monad/core/byte_string.hpp>
#include <monad/core/hex_literal.hpp>
#include <monad/test/gtest_signal_stacktrace_printer.hpp>

using namespace ::monad::literals;

TEST(LiteralTest, variable_length_hex)
{
    EXPECT_EQ((0x123456781234567812345678_hex).size(), 12);
    EXPECT_EQ(
        0x123456781234567812345678_hex,
        monad::byte_string({
            0x12,
            0x34,
            0x56,
            0x78,
            0x12,
            0x34,
            0x56,
            0x78,
            0x12,
            0x34,
            0x56,
            0x78,
        }));

    EXPECT_EQ(
        (0x123456781234567812345678123456781234567812345678_hex).size(), 24);
    EXPECT_EQ(
        0x123456781234567812345678123456781234567812345678_hex,
        monad::byte_string({
            0x12, 0x34, 0x56, 0x78, 0x12, 0x34, 0x56, 0x78,
            0x12, 0x34, 0x56, 0x78, 0x12, 0x34, 0x56, 0x78,
            0x12, 0x34, 0x56, 0x78, 0x12, 0x34, 0x56, 0x78,
        }));

    EXPECT_EQ(
        (0x1234567812345678123456781234567812345678123456781234567812345678_hex)
            .size(),
        32);
    EXPECT_EQ(
        0x1234567812345678123456781234567812345678123456781234567812345678_hex,
        monad::byte_string({
            0x12, 0x34, 0x56, 0x78, 0x12, 0x34, 0x56, 0x78, 0x12, 0x34, 0x56,
            0x78, 0x12, 0x34, 0x56, 0x78, 0x12, 0x34, 0x56, 0x78, 0x12, 0x34,
            0x56, 0x78, 0x12, 0x34, 0x56, 0x78, 0x12, 0x34, 0x56, 0x78,
        }));

    // without 0x prefix
    EXPECT_EQ(
        (1234567812345678123456781234567812345678123456781234567812345678_hex)
            .size(),
        32);
    EXPECT_EQ(
        1234567812345678123456781234567812345678123456781234567812345678_hex,
        monad::byte_string({
            0x12, 0x34, 0x56, 0x78, 0x12, 0x34, 0x56, 0x78, 0x12, 0x34, 0x56,
            0x78, 0x12, 0x34, 0x56, 0x78, 0x12, 0x34, 0x56, 0x78, 0x12, 0x34,
            0x56, 0x78, 0x12, 0x34, 0x56, 0x78, 0x12, 0x34, 0x56, 0x78,
        }));

    // odd number of nibbles
    EXPECT_EQ(
        0x12345678123456781234567_hex,
        monad::byte_string(
            {0x01,
             0x23,
             0x45,
             0x67,
             0x81,
             0x23,
             0x45,
             0x67,
             0x81,
             0x23,
             0x45,
             0x67}));
}