Dump of assembler code for function nibble_strcpy_disas:
<+0>:     movzbl (%rsi),%edx
<+3>:     inc    %rdx
<+6>:     shr    %rdx
<+9>:     inc    %rdx
<+12>:    jmp    <memcpy@plt>
End of assembler dump.
Dump of assembler code for function nibble_strcat_disas:
<+0>:     push   %rbp
<+1>:     push   %r14
<+3>:     push   %rbx
<+4>:     mov    %rdi,%rbx
<+7>:     movzbl (%rdi),%ecx
<+10>:    movzbl (%rsi),%r14d
<+14>:    test   $0x1,%cl
<+17>:    jne    <nibble_strcat_disas+55>
<+19>:    inc    %rcx
<+22>:    shr    %rcx
<+25>:    lea    0x1(%r14),%rdx
<+29>:    shr    %rdx
<+32>:    lea    (%rbx,%rcx,1),%rdi
<+36>:    inc    %rdi
<+39>:    inc    %rsi
<+42>:    call   <memcpy@plt>
<+47>:    movzbl (%rbx),%eax
<+50>:    jmp    <nibble_strcat_disas+282>
<+55>:    mov    %ecx,%eax
<+57>:    test   %r14,%r14
<+60>:    je     <nibble_strcat_disas+282>
<+66>:    xor    %edx,%edx
<+68>:    cmp    $0x1,%r14b
<+72>:    jne    <nibble_strcat_disas+156>
<+74>:    test   $0x1,%r14b
<+78>:    je     <nibble_strcat_disas+282>
<+84>:    mov    %edx,%edi
<+86>:    add    %rdi,%rcx
<+89>:    shr    %rdi
<+92>:    movzbl 0x1(%rsi,%rdi,1),%esi
<+97>:    mov    %esi,%edi
<+99>:    shr    $0x4,%dil
<+103>:   and    $0xf,%sil
<+107>:   test   $0x1,%dl
<+110>:   movzbl %dil,%edx
<+114>:   movzbl %sil,%esi
<+118>:   cmove  %edx,%esi
<+121>:   mov    %rcx,%rdx
<+124>:   shr    %rdx
<+127>:   movzbl 0x1(%rbx,%rdx,1),%edi
<+132>:   test   $0x1,%cl
<+135>:   jne    <nibble_strcat_disas+270>
<+141>:   and    $0xf,%dil
<+145>:   shl    $0x4,%sil
<+149>:   or     %dil,%sil
<+152>:   mov    %esi,%edi
<+154>:   jmp    <nibble_strcat_disas+277>
<+156>:   mov    %r14d,%edi
<+159>:   and    $0xfffffffe,%edi
<+162>:   lea    0x1(%rcx),%r8
<+166>:   shr    %r8
<+169>:   add    %rbx,%r8
<+172>:   mov    %rcx,%r9
<+175>:   shr    %r9
<+178>:   add    %rbx,%r9
<+181>:   xor    %edx,%edx
<+183>:   mov    $0x1,%r10d
<+189>:   jmp    <nibble_strcat_disas+221>
<+191>:   nop
<+192>:   and    $0xf,%r11b
<+196>:   shl    $0x4,%bpl
<+200>:   or     %bpl,%r11b
<+203>:   mov    %r11b,(%r8,%r10,1)
<+207>:   add    $0x2,%edx
<+210>:   inc    %r10
<+213>:   cmp    %edx,%edi
<+215>:   je     <nibble_strcat_disas+74>
<+221>:   movzbl (%r9,%r10,1),%r11d
<+226>:   movzbl (%rsi,%r10,1),%ebp
<+231>:   shr    $0x4,%bpl
<+235>:   and    $0xf0,%r11b
<+239>:   or     %bpl,%r11b
<+242>:   mov    %r11b,(%r9,%r10,1)
<+246>:   movzbl (%rsi,%r10,1),%ebp
<+251>:   and    $0xf,%bpl
<+255>:   movzbl (%r8,%r10,1),%r11d
<+260>:   test   $0x1,%al
<+262>:   jne    <nibble_strcat_disas+192>
<+264>:   and    $0xf0,%r11b
<+268>:   jmp    <nibble_strcat_disas+200>
<+270>:   and    $0xf0,%dil
<+274>:   or     %sil,%dil
<+277>:   mov    %dil,0x1(%rbx,%rdx,1)
<+282>:   add    %r14d,%eax
<+285>:   mov    %al,(%rbx)
<+287>:   mov    %rbx,%rax
<+290>:   pop    %rbx
<+291>:   pop    %r14
<+293>:   pop    %rbp
<+294>:   ret
End of assembler dump.